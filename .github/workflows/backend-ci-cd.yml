# .github/workflows/backend-ci-cd.yml

name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECS_CLUSTER: gfvrho-backend-cluster
  ECS_SERVICE: gfvrho-backend-service
  ECS_TASK_DEFINITION: ./infrastructure/ecs/backend-task-definition.json
  CONTAINER_NAME: gfvrho-backend
  IMAGE_REPOSITORY: gfvrho-backend
  IMAGE_TAG: latest

jobs:
  build-and-test:
    name: Build and Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          cd backend
          pytest --junitxml=test-results/backend-tests.xml

      - name: Archive Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: backend-test-results
          path: backend/test-results/backend-tests.xml

  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::123456789012:role/github-actions-ecs-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker Image
        run: |
          cd backend
          docker build -t ${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }} .
          docker tag ${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }} <aws_account_id>.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push <aws_account_id>.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }}

  deploy:
    name: Deploy to AWS ECS
    runs-on: ubuntu-latest
    needs: build-and-push-image
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::123456789012:role/github-actions-ecs-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Update ECS Service
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service ${{ env.ECS_SERVICE }} \
            --force-new-deployment

      - name: Verify Deployment
        run: |
          aws ecs describe-services \
            --cluster ${{ env.ECS_CLUSTER }} \
            --services ${{ env.ECS_SERVICE }}
